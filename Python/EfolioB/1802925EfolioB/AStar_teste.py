import heapq
import numpy as np

# Custos de deslocação
custo_dist = {0: 0, 1: 0, 2: 1, 3: 2, 4: 4, 5: 8, 6: 10}
max_dist = 6

# Definição da matriz de zonas
matriz = [
    # ID1  5x5
    [
        [0, 7, 0, 0, 4],
        [0, 0, 0, 4, 0],
        [1, 0, 0, 0, 0],
        [4, 4, 1, 0, 0],
        [6, 0, 3, 4, 4],
    ],
    # ID2  5x5
    [
        [4, 0, 0, 10, 1],
        [1, 0, 0, 0, 0],
        [0, 0, 1, 6, 3],
        [0, 4, 0, 0, 2],
        [8, 0, 6, 3, 0],
    ],

    # ID3 7x7
    [
        [0, 8, 0, 4, 5, 10, 0],
        [0, 4, 0, 7, 0, 4, 0],
        [0, 2, 4, 2, 0, 0, 2],
        [0, 7, 0, 1, 2, 0, 0],
        [2, 4, 0, 0, 3, 0, 2],
        [0, 4, 0, 0, 3, 0, 0],
        [2, 0, 0, 0, 0, 0, 0],
    ],
    # ID4 7x7
    [
        [0, 0, 1, 0, 7, 0, 1],
        [0, 1, 4, 0, 0, 0, 4],
        [0, 0, 0, 0, 2, 0, 0],
        [3, 1, 0, 8, 5, 7, 7],
        [0, 4, 0, 3, 0, 0, 0],
        [0, 0, 0, 3, 2, 4, 2],
        [0, 8, 3, 6, 3, 0, 0],
    ],

    # ID5 9x9
    [
        [6, 7, 2, 0, 0, 0, 0, 0, 0],
        [3, 3, 6, 0, 8, 4, 3, 1, 0],
        [0, 0, 8, 0, 0, 0, 2, 4, 0],
        [0, 0, 0, 1, 0, 3, 2, 0, 0],
        [0, 0, 0, 7, 4, 0, 1, 0, 0],
        [12, 8, 0, 5, 4, 1, 4, 3, 4],
        [8, 0, 1, 2, 4, 3, 3, 0, 0],
        [1, 1, 0, 0, 0, 0, 5, 0, 0],
        [4, 0, 0, 0, 4, 6, 0, 13, 2],
    ],
    # ID6 9x9
    [
        [0, 0, 0, 0, 0, 0, 0, 0, 0],
        [4, 0, 8, 4, 0, 0, 0, 0, 0],
        [0, 0, 0, 0, 0, 0, 0, 0, 0],
        [0, 0, 0, 0, 3, 0, 0, 1, 0],
        [0, 3, 0, 0, 0, 0, 0, 0, 0],
        [0, 0, 0, 1, 1, 0, 0, 3, 0],
        [0, 0, 2, 4, 0, 0, 0, 1, 0],
        [0, 2, 0, 0, 8, 0, 4, 3, 10],
        [0, 0, 3, 0, 0, 4, 0, 0, 0],
    ],

    # ID 7 11x11
    [
        [0, 0, 0, 0, 0, 3, 0, 0, 0, 0, 0],
        [0, 0, 11, 2, 0, 0, 9, 3, 0, 0, 3],
        [0, 0, 0, 3, 1, 0, 2, 0, 0, 0, 0],
        [4, 1, 2, 3, 0, 4, 0, 0, 4, 0, 0],
        [5, 0, 0, 0, 4, 0, 1, 0, 4, 3, 0],
        [0, 0, 0, 7, 4, 0, 1, 0, 0, 7, 0],
        [0, 8, 0, 0, 0, 0, 3, 0, 1, 0, 3],
        [0, 3, 0, 0, 5, 2, 3, 0, 0, 0, 2],
        [0, 0, 0, 3, 1, 0, 2, 8, 0, 0, 0],
        [0, 3, 4, 0, 7, 0, 0, 7, 0, 0, 0],
        [4, 2, 0, 4, 0, 3, 0, 0, 5, 7, 0],
    ],
    # ID 8 11x11
    [
        [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
        [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
        [0, 0, 10, 10, 0, 0, 0, 4, 5, 0, 0],
        [0, 4, 1, 0, 8, 0, 0, 0, 0, 0, 5],
        [8, 0, 0, 0, 0, 0, 6, 0, 0, 0, 0],
        [0, 0, 0, 0, 13, 0, 0, 0, 2, 0, 3],
        [0, 0, 0, 0, 4, 0, 0, 0, 0, 1, 0],
        [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
        [0, 0, 4, 0, 0, 0, 0, 3, 0, 0, 0],
        [4, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0],
        [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
    ],

    # ID 9 13x13
    [
        [2, 4, 0, 0, 6, 7, 3, 4, 0, 0, 3, 0, 1],
        [0, 0, 2, 0, 3, 0, 0, 6, 0, 0, 8, 11, 3],
        [0, 3, 0, 8, 0, 0, 2, 0, 0, 0, 0, 0, 4],
        [2, 0, 0, 0, 0, 0, 0, 0, 0, 3, 2, 0, 0],
        [0, 6, 0, 8, 0, 3, 0, 0, 0, 0, 0, 0, 1],
        [0, 3, 0, 2, 0, 0, 9, 0, 0, 0, 0, 5, 6],
        [1, 9, 4, 0, 0, 2, 4, 0, 0, 0, 3, 2, 0],
        [2, 3, 0, 4, 0, 0, 0, 6, 2, 0, 1, 0, 3],
        [0, 0, 0, 0, 0, 6, 0, 0, 0, 2, 2, 0, 8],
        [7, 2, 4, 2, 0, 0, 6, 4, 1, 0, 0, 0, 7],
        [0, 0, 0, 11, 0, 0, 0, 0, 3, 4, 0, 9, 0],
        [0, 0, 0, 0, 1, 4, 3, 4, 0, 0, 0, 3, 11],
        [0, 0, 4, 7, 7, 0, 0, 2, 0, 2, 5, 0, 1],
    ],
    # ID 10 13x13
    [
        [0, 0, 1, 4, 0, 0, 9, 0, 0, 0, 12, 0, 1],
        [0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0],
        [1, 0, 0, 0, 0, 0, 2, 0, 0, 2, 0, 0, 0],
        [0, 0, 0, 0, 0, 9, 4, 0, 0, 0, 6, 0, 0],
        [0, 6, 9, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
        [0, 0, 0, 0, 0, 0, 0, 1, 6, 10, 0, 1, 4],
        [0, 3, 0, 0, 0, 1, 0, 0, 0, 0, 0, 2, 0],
        [0, 0, 0, 1, 3, 0, 0, 0, 0, 9, 0, 0, 0],
        [9, 0, 0, 3, 3, 0, 0, 0, 0, 3, 4, 0, 0],
        [0, 1, 4, 0, 0, 0, 0, 0, 0, 5, 0, 1, 0],
        [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
        [2, 0, 0, 0, 0, 3, 3, 0, 0, 0, 0, 0, 10],
        [0, 0, 0, 0, 0, 0, 0, 0, 0, 4, 0, 0, 0],
    ],

    # ID 11 15x13
    [
        [0, 0, 0, 4, 0, 0, 0, 6, 0, 0, 0, 0, 2, 2, 0],
        [0, 2, 12, 0, 3, 0, 0, 0, 0, 26, 0, 0, 0, 0, 4],
        [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 0],
        [0, 0, 0, 0, 0, 0, 0, 3, 3, 1, 0, 0, 0, 0, 0],
        [0, 0, 0, 0, 0, 1, 3, 0, 0, 6, 4, 0, 0, 0, 0],
        [0, 0, 0, 0, 0, 0, 0, 5, 4, 0, 0, 3, 0, 0, 0],
        [9, 12, 0, 0, 0, 4, 1, 6, 0, 0, 0, 0, 0, 0, 0],
        [0, 0, 0, 0, 0, 0, 0, 0, 4, 0, 0, 0, 0, 0, 0],
        [0, 3, 0, 0, 0, 2, 0, 0, 0, 7, 0, 4, 0, 0, 0],
        [0, 0, 2, 0, 0, 9, 2, 0, 0, 0, 0, 0, 0, 0, 0],
        [0, 2, 0, 0, 2, 16, 0, 8, 0, 2, 0, 0, 0, 0, 7],
        [0, 0, 5, 0, 6, 0, 0, 0, 0, 0, 8, 0, 0, 0, 0],
        [0, 4, 0, 0, 0, 0, 0, 0, 1, 2, 3, 0, 0, 0, 0],
    ],
    # ID 12 15x13
    [
        [0, 0, 0, 0, 0, 0, 0, 10, 3, 0, 0, 0, 0, 2, 0],
        [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0],
        [0, 1, 0, 3, 0, 0, 0, 0, 4, 0, 0, 0, 4, 0, 0],
        [0, 0, 0, 10, 3, 8, 11, 0, 0, 0, 0, 0, 2, 0, 0],
        [0, 4, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 0, 1],
        [0, 4, 2, 0, 0, 0, 4, 0, 0, 0, 0, 0, 0, 0, 0],
        [0, 0, 0, 0, 0, 0, 0, 5, 0, 10, 0, 0, 1, 0, 0],
        [0, 0, 0, 0, 0, 0, 0, 0, 3, 0, 0, 2, 8, 0, 15],
        [0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 11, 0, 0],
        [0, 0, 0, 0, 0, 3, 0, 0, 0, 0, 0, 1, 0, 2, 0],
        [0, 0, 0, 11, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2],
        [8, 0, 0, 0, 0, 4, 0, 0, 0, 0, 0, 4, 2, 0, 4],
        [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 8, 1],
    ],
    # ID 13 17x13
    [
        [0, 0, 0, 3, 0, 0, 0, 0, 5, 0, 0, 0, 0, 0, 0, 0, 0],
        [0, 0, 0, 0, 3, 0, 0, 0, 4, 2, 0, 3, 0, 0, 0, 0, 0],
        [6, 0, 3, 0, 0, 0, 6, 0, 30, 0, 1, 8, 6, 10, 0, 0, 0],
        [0, 7, 0, 1, 4, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 4, 4],
        [0, 2, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 3],
        [0, 8, 0, 0, 0, 0, 0, 3, 0, 0, 36, 0, 1, 0, 0, 2, 0],
        [6, 0, 0, 0, 8, 2, 8, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0],
        [8, 1, 0, 0, 0, 0, 4, 1, 0, 0, 0, 0, 0, 6, 7, 0, 0],
        [3, 5, 0, 0, 0, 0, 0, 0, 0, 0, 5, 0, 0, 4, 0, 0, 1],
        [3, 0, 0, 2, 0, 4, 0, 0, 0, 0, 9, 0, 0, 0, 8, 16, 24],
        [0, 1, 0, 0, 1, 1, 0, 0, 2, 0, 0, 0, 0, 0, 6, 1, 0],
        [0, 3, 4, 0, 3, 4, 0, 10, 0, 0, 0, 0, 5, 5, 8, 4, 4],
        [8, 0, 0, 0, 0, 0, 17, 0, 0, 10, 0, 2, 0, 0, 2, 0, 0],
    ],
    # ID 14 17x13
    [
        [0, 0, 0, 10, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
        [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 4, 0, 0, 0],
        [0, 6, 0, 0, 0, 0, 8, 0, 10, 0, 0, 0, 0, 2, 2, 3, 0],
        [0, 0, 0, 0, 0, 4, 0, 8, 3, 0, 0, 0, 0, 0, 0, 0, 0],
        [0, 0, 0, 0, 4, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
        [4, 0, 8, 1, 0, 0, 7, 0, 0, 0, 0, 0, 5, 3, 0, 0, 0],
        [0, 0, 3, 0, 1, 0, 0, 3, 0, 0, 3, 0, 3, 0, 8, 0, 0],
        [0, 0, 0, 0, 11, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0],
        [0, 6, 0, 0, 0, 0, 0, 1, 0, 2, 0, 1, 0, 0, 0, 0, 0],
        [0, 0, 2, 0, 1, 3, 0, 1, 0, 4, 0, 0, 6, 0, 0, 0, 0],
        [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0],
        [4, 8, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0],
        [4, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 3, 0, 0, 6, 3],
    ],

    # ID 15 19x13
    [
        [0, 0, 0, 0, 4, 0, 0, 4, 0, 0, 8, 0, 6, 0, 0, 0, 0, 0, 4],
        [0, 0, 0, 0, 0, 2, 0, 6, 0, 0, 0, 0, 0, 0, 0, 0, 0, 3, 1],
        [2, 0, 8, 3, 0, 0, 0, 5, 0, 4, 0, 0, 0, 0, 0, 2, 1, 4, 0],
        [0, 0, 1, 0, 4, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 18, 10, 0, 0],
        [0, 0, 1, 0, 0, 0, 0, 3, 0, 2, 0, 0, 0, 7, 4, 0, 0, 4, 3],
        [0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 3, 2, 0, 2],
        [0, 0, 0, 1, 0, 1, 0, 0, 0, 2, 2, 0, 0, 4, 0, 0, 10, 1, 0],
        [3, 0, 0, 0, 0, 0, 0, 4, 1, 0, 0, 0, 0, 0, 4, 0, 0, 1, 0],
        [2, 0, 2, 0, 0, 0, 0, 1, 0, 0, 4, 1, 0, 3, 0, 0, 0, 3, 3],
        [0, 0, 0, 0, 4, 0, 1, 1, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
        [0, 0, 0, 4, 0, 0, 4, 2, 4, 0, 0, 0, 0, 0, 0, 4, 0, 0, 0],
        [0, 0, 2, 0, 3, 22, 0, 0, 0, 0, 0, 2, 7, 0, 0, 0, 0, 0, 1],
        [0, 9, 0, 0, 6, 0, 0, 0, 0, 0, 0, 0, 0, 0, 5, 1, 4, 0, 8],
    ],
    # ID 16 19x13
    [
        [0, 0, 0, 0, 0, 0, 0, 3, 0, 0, 0, 2, 0, 4, 0, 0, 0, 0, 0],
        [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0],
        [5, 0, 0, 3, 0, 0, 0, 0, 0, 0, 0, 2, 1, 0, 0, 0, 0, 0, 0],
        [0, 0, 4, 0, 0, 0, 0, 0, 14, 0, 0, 0, 0, 2, 0, 7, 0, 0, 0],
        [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4, 0, 0, 0, 0, 0, 2],
        [0, 0, 3, 3, 0, 0, 0, 0, 0, 3, 0, 0, 0, 0, 0, 0, 2, 0, 0],
        [5, 0, 0, 0, 0, 0, 6, 0, 2, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0],
        [0, 0, 2, 0, 0, 0, 0, 0, 4, 0, 0, 5, 0, 0, 0, 0, 0, 4, 1],
        [3, 0, 4, 0, 0, 0, 0, 0, 0, 0, 0, 7, 2, 0, 0, 0, 1, 0, 3],
        [0, 0, 1, 0, 0, 4, 11, 0, 3, 0, 0, 0, 0, 11, 3, 0, 0, 0, 0],
        [1, 0, 2, 8, 0, 0, 0, 0, 0, 0, 4, 0, 0, 3, 1, 0, 0, 0, 0],
        [3, 0, 11, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 3, 0, 7, 0, 0, 0],
        [0, 0, 0, 0, 0, 2, 0, 0, 0, 4, 0, 0, 0, 0, 0, 0, 0, 1, 0],
    ],

    # ID 17 19x15
    [
        [0, 0, 0, 0, 0, 0, 0, 0, 16, 1, 0, 5, 0, 3, 0, 0, 0, 4, 0],
        [0, 2, 3, 0, 0, 5, 0, 0, 0, 0, 0, 0, 0, 6, 0, 0, 0, 1, 0],
        [0, 9, 1, 0, 0, 0, 0, 4, 2, 2, 0, 1, 8, 2, 0, 4, 24, 10, 13],
        [0, 0, 3, 0, 0, 0, 0, 2, 0, 0, 4, 0, 11, 0, 0, 0, 2, 1, 1],
        [0, 4, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4, 0, 0, 2],
        [0, 3, 12, 0, 4, 0, 0, 0, 0, 0, 0, 0, 10, 0, 0, 0, 0, 0, 0],
        [0, 0, 2, 0, 0, 0, 9, 0, 0, 0, 0, 0, 8, 4, 0, 0, 0, 0, 0],
        [3, 0, 0, 0, 0, 2, 0, 0, 6, 0, 3, 0, 6, 0, 0, 0, 0, 0, 0],
        [1, 0, 0, 0, 0, 0, 0, 2, 5, 0, 0, 12, 2, 4, 0, 0, 7, 0, 1],
        [6, 4, 4, 0, 0, 8, 0, 3, 2, 0, 0, 0, 9, 0, 0, 0, 0, 0, 0],
        [0, 0, 0, 0, 0, 0, 4, 8, 0, 0, 2, 0, 0, 8, 0, 0, 0, 0, 2],
        [0, 4, 18, 0, 0, 0, 0, 0, 0, 0, 4, 1, 2, 0, 0, 0, 0, 8, 3],
        [2, 0, 7, 0, 7, 0, 0, 9, 0, 0, 0, 0, 0, 0, 0, 2, 0, 0, 0],
        [0, 0, 0, 0, 7, 2, 0, 0, 1, 0, 0, 0, 0, 0, 0, 11, 0, 30, 0],
        [1, 0, 0, 0, 0, 0, 0, 7, 0, 0, 0, 3, 0, 0, 0, 0, 0, 0, 0],
    ],
    # ID 18 19x15
    [
        [0, 0, 0, 0, 14, 0, 0, 0, 0, 0, 0, 0, 3, 7, 0, 0, 0, 0, 0],
        [0, 2, 5, 7, 2, 0, 0, 0, 6, 0, 0, 0, 1, 0, 0, 3, 0, 0, 1],
        [0, 7, 0, 2, 0, 0, 0, 0, 0, 0, 0, 10, 0, 0, 4, 2, 0, 0, 0],
        [0, 0, 0, 4, 0, 0, 0, 5, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0],
        [0, 0, 5, 0, 4, 0, 0, 3, 4, 0, 0, 0, 3, 0, 0, 0, 0, 7, 0],
        [0, 0, 0, 0, 0, 0, 3, 0, 6, 0, 0, 5, 0, 4, 0, 0, 0, 0, 0],
        [2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 3, 0, 0, 0, 0, 0, 0, 3, 0],
        [0, 0, 7, 0, 4, 0, 0, 0, 0, 0, 1, 0, 0, 0, 8, 0, 0, 0, 0],
        [4, 0, 0, 0, 0, 0, 0, 0, 7, 0, 7, 0, 0, 0, 0, 0, 8, 0, 3],
        [8, 0, 0, 0, 0, 0, 2, 6, 2, 0, 0, 0, 0, 0, 3, 0, 0, 0, 0],
        [0, 0, 0, 0, 0, 0, 0, 12, 0, 0, 0, 4, 0, 0, 8, 0, 0, 0, 0],
        [0, 0, 4, 0, 0, 0, 0, 0, 0, 13, 0, 2, 0, 0, 0, 0, 0, 1, 0],
        [0, 0, 0, 0, 0, 0, 3, 0, 0, 0, 0, 0, 0, 0, 0, 3, 0, 2, 0],
        [0, 0, 0, 0, 0, 0, 0, 0, 5, 0, 0, 0, 0, 0, 0, 0, 0, 7, 0],
        [0, 0, 0, 0, 0, 0, 4, 0, 0, 0, 2, 0, 0, 0, 0, 0, 2, 0, 3],
    ],

    # ID 19 19x17
    [
        [0, 2, 0, 0, 0, 4, 4, 0, 0, 4, 0, 0, 1, 6, 0, 1, 4, 0, 0],
        [1, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 9, 3, 0, 0, 0, 0, 0],
        [3, 0, 0, 4, 0, 9, 1, 0, 0, 1, 0, 0, 0, 6, 0, 0, 0, 0, 0],
        [0, 4, 0, 0, 4, 4, 0, 0, 0, 0, 0, 0, 12, 0, 0, 0, 0, 1, 0],
        [0, 0, 0, 3, 0, 6, 0, 0, 0, 0, 3, 0, 0, 11, 17, 0, 0, 0, 0],
        [6, 0, 1, 0, 0, 6, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
        [0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 6, 0, 0, 1, 0, 0, 0, 2, 0],
        [1, 0, 10, 0, 0, 2, 2, 0, 3, 4, 8, 0, 0, 9, 11, 1, 0, 16, 0],
        [3, 0, 0, 0, 0, 0, 0, 0, 4, 0, 0, 7, 0, 0, 7, 0, 0, 0, 0],
        [0, 6, 0, 1, 0, 0, 0, 0, 3, 5, 0, 0, 2, 4, 0, 0, 0, 0, 0],
        [0, 0, 0, 0, 0, 6, 0, 3, 6, 0, 10, 6, 0, 0, 0, 0, 0, 0, 2],
        [3, 0, 0, 4, 4, 0, 2, 0, 0, 0, 1, 0, 0, 1, 2, 16, 11, 0, 0],
        [7, 0, 0, 3, 0, 0, 0, 0, 0, 10, 12, 0, 0, 0, 0, 0, 0, 0, 0],
        [0, 2, 0, 0, 0, 0, 2, 2, 0, 0, 0, 0, 0, 0, 0, 4, 1, 0, 1],
        [0, 0, 0, 0, 0, 0, 0, 1, 2, 6, 3, 0, 0, 0, 0, 0, 7, 0, 0],
        [0, 0, 1, 0, 4, 8, 0, 0, 0, 0, 0, 6, 0, 0, 0, 6, 0, 0, 0],
        [0, 0, 0, 0, 0, 0, 0, 2, 0, 2, 0, 0, 0, 7, 0, 0, 0, 0, 2],
    ],
    # ID 20 19x17
    [
        [3, 4, 0, 0, 3, 0, 0, 0, 0, 6, 0, 4, 4, 0, 0, 0, 4, 0, 0],
        [4, 0, 0, 5, 0, 0, 0, 0, 7, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0],
        [0, 0, 0, 0, 0, 0, 0, 4, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0],
        [0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0],
        [0, 1, 4, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 9, 0, 0],
        [0, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 4, 0],
        [4, 0, 0, 5, 0, 0, 0, 0, 0, 0, 0, 11, 0, 0, 0, 0, 0, 3, 0],
        [2, 0, 7, 0, 0, 11, 0, 0, 0, 0, 0, 0, 5, 0, 7, 0, 0, 0, 0],
        [9, 0, 0, 0, 1, 0, 1, 15, 0, 0, 0, 0, 1, 0, 0, 0, 1, 4, 3],
        [0, 3, 0, 0, 0, 0, 0, 2, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0],
        [0, 0, 2, 4, 0, 0, 0, 0, 0, 0, 0, 0, 4, 0, 1, 0, 0, 0, 0],
        [0, 2, 0, 0, 0, 7, 0, 4, 0, 0, 0, 0, 0, 0, 0, 0, 0, 9, 0],
        [0, 0, 6, 0, 0, 0, 2, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0],
        [3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 9, 0, 0, 3],
        [0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 9, 0, 0, 0, 7, 0, 0],
        [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0],
        [0, 0, 0, 0, 0, 0, 0, 0, 6, 3, 0, 0, 0, 0, 0, 0, 1, 0, 0],
    ],
]

# Função para calcular o custo de deslocação
def calcular_custo_deslocacao(estacoes, matriz):
    n, m = len(matriz), len(matriz[0])
    distancias = np.full((n, m), np.inf)

    for (ex, ey) in estacoes:
        for i in range(n):
            for j in range(m):
                dist = max(abs(ex - i), abs(ey - j))
                distancias[i][j] = min(distancias[i][j], dist)

    custo_total = 0
    num_familias = 0
    for i in range(n):
        for j in range(m):
            if matriz[i][j] > 0:
                custo_total += matriz[i][j] * custo_dist[min(distancias[i][j], max_dist)]
                num_familias += matriz[i][j]

    custo_medio = custo_total / num_familias if num_familias > 0 else 0
    return custo_medio

# Algoritmo A*
def a_star(matriz):
    n, m = len(matriz), len(matriz[0])

    # Função heurística
    def heuristica(estacoes):
        custo_medio = calcular_custo_deslocacao(estacoes, matriz)
        return len(estacoes) * 1000 + 100 * custo_medio

    # Estado inicial
    estacoes_iniciais = []
    custo_inicial = heuristica(estacoes_iniciais)
    fronteira = [(custo_inicial, estacoes_iniciais)]
    visitados = set()

    while fronteira:
        custo_atual, estacoes = heapq.heappop(fronteira)

        if (tuple(estacoes), custo_atual) in visitados:
            continue

        visitados.add((tuple(estacoes), custo_atual))

        # Verificar se a solução é válida
        custo_medio = calcular_custo_deslocacao(estacoes, matriz)
        if custo_medio < 3:
            return estacoes, len(estacoes), custo_medio

        # Expandir nós vizinhos
        for i in range(n):
            for j in range(m):
                nova_estacao = (i, j)
                if nova_estacao not in estacoes:
                    novas_estacoes = estacoes + [nova_estacao]
                    novo_custo = heuristica(novas_estacoes)
                    heapq.heappush(fronteira, (novo_custo, novas_estacoes))

    return None

# Executar o algoritmo para todas as matrizes
for idx, matriz_id in enumerate(matriz):
    resultado = a_star(matriz_id)
    if resultado:
        print(f"-------------------------------------------")
        print(f"Matriz ID {idx + 1}:")
        print(f"Melhor localização das estações: {resultado[0]}")
        print(f"Número de estações (A): {resultado[1]}")
        print(f"Custo médio de deslocação (B): {resultado[2]}")
        print(f"Custo da solução: {resultado[1] * 1000 + resultado[2] * 100}")
        print(f"-------------------------------------------")
    else:
        print(f"Matriz ID {idx + 1}: Nenhuma solução encontrada")
